{"version":3,"sources":["components/twitter/TwitterFeed.js","components/publications/attributes/PublicationBadge.js","components/publications/publication/Publication.js","global/data.js","components/publications/Publications.js","components/publications/PublicationPage.js","components/App.js","index.js"],"names":["TwitterFeed","linkedHandle","className","dataSource","sourceType","screenName","options","height","PublicationBadge","Badge","variant","Publication","pub","useState","clicked","setClicked","dropDown","description","Row","Col","md","Button","onClick","window","open","link","Provider","value","color","size","title","authors","map","author","join","yearPublished","TEAM_PUBLICATIONS","JSON","parse","process","Publications","teamPublications","console","log","length","_id","PublicationPage","Container","fluid","xs","App","ReactDOM","render","document","getElementById"],"mappings":"mPAgBeA,EARK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACI,qBAAKC,UAAU,eAAf,SACI,cAAC,IAAD,CAAUC,WAAY,CAACC,WAAY,UAAWC,WAAYJ,GAAeK,QAAS,CAACC,OAAQ,U,uDCGxFC,EARU,WACrB,OACI,qCACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,UAAf,mBAAuC,QCwEpCC,EAxEK,SAAC,GAAW,IAAVC,EAAS,EAATA,IAClB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAoBMC,EACF,sBAAKd,UAAU,iBAAf,UACI,+BAAI,6CAAJ,IAAyBU,EAAIK,YAA7B,OACA,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMC,OAAOC,KAAP,UAAeZ,EAAIa,MAAQ,WAAlD,SACI,cAAC,IAAYC,SAAb,CAAsBC,MAAO,CAACC,MAAO,QAASC,KAAM,QAApD,SACI,cAAC,IAAD,UAIZ,cAACV,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,sBAAME,QAAS,kBAAMP,GAAYD,IAAjC,SA5BRA,GACA,cAAC,IAAYY,SAAb,CAAsBC,MAAO,CAACC,MAAO,QAASC,KAAM,QAApD,SACI,cAAC,IAAD,CAAU3B,UAAU,qBAkChC,OACI,qCACI,qBAAKA,UAAU,cAAf,SACI,cAACgB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,qBAAIlB,UAAU,YAAd,UACKU,EAAIkB,MACL,cAAC,EAAD,IAAmB,cAAC,EAAD,aAMnC,sBAAK5B,UAAWY,EAAU,YAAc,iBAAxC,UACI,+BAAI,2CAAkBF,EAAImB,QAAQC,KAAI,SAACC,GAAD,gBAAeA,MAAUC,KAAK,SACpE,eAAChB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,qBAAIlB,UAAWY,EAAU,GAAK,OAA9B,UAAsC,iDAAwBF,EAAIuB,cAAlE,SAEJ,cAAChB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,sBAAME,QAAS,kBAAMP,GAAYD,IAAjC,UA/CXA,GACD,cAAC,IAAYY,SAAb,CAAsBC,MAAO,CAACC,MAAO,QAASC,KAAM,QAApD,SACI,cAAC,IAAD,CAAY3B,UAAU,qBAmDzBY,GAAWE,MCjEXoB,EAAoBC,KAAKC,MAAMC,2pHCgB7BC,EApBM,WACjB,IAAMC,EAAmBL,EAGzB,OAFAM,QAAQC,IAAIF,GAGR,qCACI,qBAAKvC,UAAU,cAAf,SACI,2CACcuC,EAAiBG,OAD/B,qBAIJ,qBAAK1C,UAAU,kBAAf,SAEQuC,EAAiBT,KAAI,SAAApB,GAAG,OAAI,cAAC,EAAD,CAAaA,IAAKA,GAAUA,EAAIiC,cCWjEC,EArBS,WACpB,IAAM7C,EFGyBsC,iBED/B,OACI,mCACI,cAACQ,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAAC9B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK8B,GAAI,GAAI7B,GAAI,GAAjB,SACI,cAAC,EAAD,MAEJ,cAACD,EAAA,EAAD,CAAK8B,GAAI,EAAG7B,GAAI,EAAhB,SAEuB,cAAC,EAAD,CAAanB,aAAcA,cCZvDiD,EANH,WACR,OACI,cAAC,EAAD,KCKRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53ee5cb1.chunk.js","sourcesContent":["/**\n * The TwitterFeed component displays a panel that renders a linked twitter account's feed.\n */\nimport React from 'react';\nimport {Timeline} from 'react-twitter-widgets';\nimport './TwitterFeed.css';\n\n\nconst TwitterFeed = ({linkedHandle}) => {\n    return (\n        <div className=\"twitter-feed\">\n            <Timeline dataSource={{sourceType: 'profile', screenName: linkedHandle}} options={{height: 800}}/>\n        </div>\n    );\n};\n\nexport default TwitterFeed;\n","/**\n * The PublicationBadge component is a reusable badge used to associate additional attributes to a Publication.\n */\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\n\nconst PublicationBadge = () => {\n    return (\n        <>\n            <Badge variant=\"primary\">E: 50</Badge>{' '}\n        </>\n    );\n};\n\nexport default PublicationBadge;\n","import React, {useState} from 'react';\nimport {Button, Col, Row} from 'react-bootstrap';\nimport {BsLink45Deg} from 'react-icons/bs'\nimport {GrLinkDown, GrLinkUp} from 'react-icons/gr'\nimport {IconContext} from \"react-icons\"\nimport '../publications.css'\n\nimport PublicationBadge from \"../attributes/PublicationBadge\";\n\nconst Publication = ({pub}) => {\n    const [clicked, setClicked] = useState(false)\n\n    const displayUpArrow = () => {\n        return (\n            clicked &&\n            <IconContext.Provider value={{color: 'black', size: '25px'}}>\n                <GrLinkUp className=\"ml-2\"/>\n            </IconContext.Provider>\n        )\n    }\n\n    const displayDownArrow = () => {\n        return (\n            !clicked &&\n            <IconContext.Provider value={{color: 'black', size: '25px'}}>\n                <GrLinkDown className=\"ml-2\"/>\n            </IconContext.Provider>\n        )\n    }\n\n    const dropDown = (\n        <div className=\"mb-3 ml-3 mr-2\">\n            <h5><b>Description:</b> {pub.description} </h5>\n            <Row>\n                <Col md={11}>\n                    <Button onClick={() => window.open(`${pub.link}`, '_blank')}>\n                        <IconContext.Provider value={{color: 'black', size: '25px'}}>\n                            <BsLink45Deg/>\n                        </IconContext.Provider>\n                    </Button>\n                </Col>\n                <Col md={1}>\n                    <span onClick={() => setClicked(!clicked)}>\n                        {displayUpArrow()}\n                    </span>\n                </Col>\n            </Row>\n        </div>\n    )\n\n    return (\n        <>\n            <div className=\"modalHeader\">\n                <Row>\n                    <Col md={11}>\n                        <h3 className=\"ml-3 mt-3\">\n                            {pub.title}\n                            <PublicationBadge/><PublicationBadge/>\n                        </h3>\n                    </Col>\n                </Row>\n            </div>\n\n            <div className={clicked ? \"ml-3 mt-3\" : \"ml-3 mt-3 mb-2\"}>\n                <h5><b> Authors: </b>{pub.authors.map((author) => `${author}`).join(', ')}</h5>\n                <Row>\n                    <Col md={11}>\n                        <h5 className={clicked ? \"\" : \"blur\"}><b>Year Published: </b>{pub.yearPublished} </h5>\n                    </Col>\n                    <Col md={1}>\n                        <span onClick={() => setClicked(!clicked)}>\n                            {displayDownArrow()}\n                        </span>\n                    </Col>\n                </Row>\n            </div>\n            {clicked && dropDown}\n        </>\n    )\n}\n\nexport default Publication","/**\n * This module defines and exports variables representing data needed by the base application.\n * The value of each variable will be taken from a special \"React Environment Variable\" set at build time.\n * The Scholly service will set these environment variables before triggering the build of this base React app.\n *\n * @note: the set environment variables are treated as strings, therefore for the data represented as objects\n * (such as the publications), we need to parse them using JSON.parse().\n */\n\n\n/// The list of publications the team has created for rendering in the publications page\nexport const TEAM_PUBLICATIONS = JSON.parse(process.env.REACT_APP_TEAM_PUBLICATIONS);\n\n/// The twitter handle associated with the team account for displaying twitter feed\nexport const TEAM_TWITTER_HANDLE = process.env.REACT_APP_TEAM_TWITTER_HANDLE;","import React from 'react';\n\nimport Publication from './publication/Publication'\nimport './publications.css'\nimport {TEAM_PUBLICATIONS} from \"../../global/data\";\n\n\nconst Publications = () => {\n    const teamPublications = TEAM_PUBLICATIONS;\n    console.log(teamPublications);\n\n    return (\n        <>\n            <div className=\"text-center\">\n                <h4>\n                    Total of {teamPublications.length} publications\n                </h4>\n            </div>\n            <div className=\"publicationList\">\n                {\n                    teamPublications.map(pub => <Publication pub={pub} key={pub._id}/>)\n                }\n            </div>\n        </>\n    )\n}\n\nexport default Publications","import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport TwitterFeed from \"../twitter/TwitterFeed\";\nimport Publications from \"./Publications\"\nimport {TEAM_TWITTER_HANDLE} from \"../../global/data\";\n\n\nconst PublicationPage = () => {\n    const linkedHandle = TEAM_TWITTER_HANDLE;\n\n    return (\n        <>\n            <Container fluid>\n                <Row>\n                    <Col xs={12} md={10}>\n                        <Publications/>\n                    </Col>\n                    <Col xs={4} md={2}>\n                        {\n                            linkedHandle ? <TwitterFeed linkedHandle={linkedHandle}/> : null\n                        }\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n};\n\nexport default PublicationPage;\n ","import React from 'react';\nimport PublicationPage from \"./publications/PublicationPage\";\n\n\nconst App = () => {\n    return (\n        <PublicationPage />\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-grid.css';\nimport 'bootstrap/dist/css/bootstrap-reboot.css';\n\nimport App from \"./components/App\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}